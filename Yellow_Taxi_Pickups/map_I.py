#!/usr/bin/python
import sys
import numpy as np

zipDict = {'11004': '40.742944,-73.70956', '10281': '40.714643,-74.014958', '11220': '40.641436,-74.01574', '11205': '40.694214,-73.96529', '10011': '40.741012,-74.00012', '11367': '40.728614,-73.82145', '11102': '40.771286,-73.92462', '10304': '40.60787,-74.08991', '10021': '40.76842,-73.96045', '10462': '40.842173,-73.85862', '10465': '40.825727,-73.81752', '11378': '40.724096,-73.90271', '10039': '40.826181,-73.9371', '10280': '40.707467,-74.0178', '11224': '40.576589,-73.99172', '11413': '40.670138,-73.75141', '11355': '40.749463,-73.81941', '11366': '40.726137,-73.79502', '11419': '40.688688,-73.82216', '11206': '40.702348,-73.94288', '11109': '40.651378,-73.870779', '10040': '40.858704,-73.92853', '11357': '40.784453,-73.80922', '11369': '40.762854,-73.87051', '10029': '40.791586,-73.94575', '10033': '40.848764,-73.93496', '10007': '40.714754,-74.00721', '11209': '40.62327,-74.0295', '11212': '40.662191,-73.91328', '10312': '40.543117,-74.17628', '10010': '40.739022,-73.98205', '10036': '40.759511,-73.99019', '10474': '40.81321,-73.88755', '11230': '40.622994,-73.96427', '10031': '40.826201,-73.94879', '10457': '40.846745,-73.89861', '10454': '40.805968,-73.91628', '11219': '40.632449,-73.99629', '10020': '40.758667,-73.98024', '10030': '40.818151,-73.94351', '11040': '40.742901,-73.67895', '11096': '40.618206,-73.74762', '10301': '40.631775,-74.09432', '11427': '40.728235,-73.74782', '10469': '40.868643,-73.84735', '10306': '40.569394,-74.11785', '11363': '40.772636,-73.74644', '11214': '40.598994,-73.99611', '11368': '40.747106,-73.85838', '11216': '40.680398,-73.94824', '10034': '40.867653,-73.92', '10001': '40.750742,-73.99653', '10470': '40.900629,-73.86072', '11106': '40.762012,-73.93147', '11005': '40.756983,-73.7148', '11691': '40.60002,-73.75962', '10452': '40.838745,-73.92234', '11365': '40.738983,-73.79209', '11364': '40.746718,-73.75994', '10111': '40.759235,-73.97775', '10018': '40.755101,-73.99337', '11225': '40.662892,-73.95509', '11235': '40.583803,-73.95019', '10024': '40.786387,-73.97709', '11359': '40.79278,-73.776701', '10455': '40.815559,-73.90771', '11377': '40.742869,-73.90377', '10037': '40.813385,-73.93616', '11201': '40.695286,-73.98907', '10472': '40.830409,-73.86845', '10467': '40.872265,-73.86937', '11697': '40.560167,-73.90891', '11251': '40.645099,-73.945032', '11239': '40.645848,-73.87919', '11232': '40.655481,-74.00424', '11208': '40.672666,-73.87248', '10475': '40.878522,-73.82541', '11237': '40.703355,-73.91993', '10022': '40.759015,-73.96732', '10004': '40.699226,-74.04118', '10075': '40.780751,-73.977182', '11358': '40.760522,-73.79612', '10453': '40.853017,-73.91214', '11234': '40.618561,-73.9216', '10003': '40.732509,-73.98935', '11217': '40.68209,-73.97783', '10006': '40.707904,-74.01342', '11204': '40.618944,-73.98473', '11432': '40.714144,-73.79324', '10458': '40.864166,-73.88881', '11222': '40.726302,-73.94559', '11415': '40.706903,-73.82973', '10016': '40.74618,-73.97759', '10466': '40.89095,-73.84702', '11105': '40.774686,-73.90816', '11213': '40.670937,-73.93459', '11418': '40.698485,-73.83365', '10309': '40.529749,-74.21304', '11423': '40.714261,-73.76824', '10305': '40.599021,-74.07503', '11430': '40.650519,-73.79567', '11434': '40.674888,-73.7727', '11207': '40.670874,-73.89424', '10009': '40.727093,-73.97864', '10461': '40.842917,-73.83819', '11223': '40.598142,-73.97229', '10307': '40.508274,-74.24387', '10456': '40.829676,-73.90856', '11416': '40.683301,-73.8503', '11218': '40.644552,-73.97595', '10314': '40.606337,-74.14513', '11001': '40.7232,-73.70475', '11103': '40.762968,-73.91091', '11211': '40.71209,-73.95427', '11215': '40.667508,-73.9856', '11436': '40.674146,-73.79687', '11356': '40.785462,-73.84366', '11428': '40.719981,-73.74127', '11374': '40.724945,-73.8609', '10025': '40.798502,-73.96811', '10303': '40.629448,-74.16239', '10302': '40.631127,-74.13715', '11210': '40.627946,-73.94552', '11104': '40.743796,-73.91949', '11361': '40.763177,-73.77392', '11420': '40.673138,-73.81443', '10012': '40.72596,-73.99834', '11226': '40.645256,-73.95553', '11354': '40.767969,-73.82496', '11203': '40.649059,-73.93304', '10048': '40.712086,-74.01227', '10065': '40.780751,-73.977182', '10115': '40.810906,-73.96375', '10002': '40.71704,-73.987', '10308': '40.551353,-74.15098', '11360': '40.780386,-73.78005', '11229': '40.599256,-73.94118', '10017': '40.752159,-73.97231', '11422': '40.662538,-73.73514', '11101': '40.745341,-73.93907', '10128': '40.781894,-73.95039', '11421': '40.69087,-73.85828', '10005': '40.706019,-74.00858', '11411': '40.693538,-73.73574', '10023': '40.776099,-73.98285', '11233': '40.676938,-73.91858', '10460': '40.84095,-73.88036', '11412': '40.697188,-73.75948', '11379': '40.716028,-73.87925', '11426': '40.732239,-73.72108', '10038': '40.709677,-74.00365', '10282': '40.717179,-74.01433', '11228': '40.617563,-74.01168', '11362': '40.759686,-73.73322', '10028': '40.776777,-73.9541', '10019': '40.765714,-73.9856', '11429': '40.708833,-73.73903', '10044': '40.762174,-73.94917', '10468': '40.867107,-73.89916', '11375': '40.720535,-73.84582', '11372': '40.750146,-73.88433', '11414': '40.658188,-73.84321', '11385': '40.703069,-73.89285', '11435': '40.700068,-73.80986', '11231': '40.6788,-74.00254', '10032': '40.840686,-73.94154', '10026': '40.802853,-73.95471', '11451': '40.651378,-73.870779', '11238': '40.680145,-73.96257', '10451': '40.819729,-73.9223', '10027': '40.812665,-73.95499', '10471': '40.900819,-73.90347', '10310': '40.63212,-74.11551', '11417': '40.675534,-73.84476', '11236': '40.640527,-73.90362', '11692': '40.592939,-73.79568', '11433': '40.696538,-73.78734', '10014': '40.734718,-74.00532', '10069': '40.775477,-73.9905', '10035': '40.802395,-73.93359', '11221': '40.691234,-73.92637', '11373': '40.736076,-73.87804', '10459': '40.825432,-73.89327', '10473': '40.818514,-73.85893', '10013': '40.720666,-74.00526', '11694': '40.57649,-73.84721', '11371': '40.772072,-73.87509'}

def FindZipCode(zipDict, lon, lat):
    
    keys = zipDict.keys()
    keyOut = keys[0]
    
    crd = zipDict[keyOut].split(",")
    zipLon = float(crd[1])
    zipLat = float(crd[0])
    min = (lon - zipLon)**2 + (lat - zipLat)**2
    
    for key in keys:
        crd = zipDict[key].split(",")
        zipLon = float(crd[1])
        zipLat = float(crd[0])
        distSq = (lon - zipLon)**2 + (lat - zipLat)**2
        
        if distSq < min:
            min = distSq
            keyOut = key
    return keyOut
    

for line in sys.stdin:
    #count = count + 1
    l = line.strip().split(",")
    if l[0] != "vendor_name" and l[0] != "vendor_id" and l[0] != "":
        plon = float(l[5])
        plat = float(l[6])
        #dlon = float(l[9])
        #dlat = float(l[10])
        pkey = FindZipCode(zipDict, plon, plat)
        #dkey = FindZipCode(zipDict, dlon, dlat)
        print "%s,\t%d" % (pkey,1)
        #print "%s,\t%d" % (dkey,1)